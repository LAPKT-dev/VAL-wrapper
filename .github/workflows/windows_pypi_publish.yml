# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: WindowsWheelPublishPypi

on:
  release:
    types: [published]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        py -m pip install --upgrade pip
        py -m pip install flake8 pytest
        py -m pip install --upgrade build wheel twine

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: > 
        cmake -B ${{github.workspace}}/build 
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/${{env.BUILD_TYPE}}
        -DCMAKE_GENERATOR="MinGW Makefiles"

    - name: Build
      # Build your program with the given configuration
      run: > 
        cmake --build ${{github.workspace}}/build --target install

    - name: Build Pypi Python Package
      run: |
        cd ${{github.workspace}}/${{env.BUILD_TYPE}}
        py setup.py bdist_wheel --plat-name=win_amd64
    
    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TEST_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        packages_dir: ${{github.workspace}}/${{env.BUILD_TYPE}}/dist
